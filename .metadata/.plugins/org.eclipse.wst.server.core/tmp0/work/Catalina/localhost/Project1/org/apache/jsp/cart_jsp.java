/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.69
 * Generated at: 2023-01-09 16:06:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class cart_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"ISO-8859-1\">\r\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.3.1.js\"\r\n");
      out.write("			integrity=\"sha256-2Kok7MbOyxpgUVvAk/HJ2jigOSYS2auK4Pfzbm7uH60=\"\r\n");
      out.write("			crossorigin=\"anonymous\">\r\n");
      out.write("	</script>\r\n");
      out.write("  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65\" crossorigin=\"anonymous\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"Bootstrap/CSS/style1.css\">\r\n");
      out.write("  <script type='text/javascript' src='addToCart.js'></script>\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("		$(document).on(\"scroll\", function() {\r\n");
      out.write("			var pageTop = $(document).scrollTop();\r\n");
      out.write("			var pageBottom = pageTop + $(window).height();\r\n");
      out.write("			var tags = $(\".tag\");\r\n");
      out.write("		  \r\n");
      out.write("			for (var i = 0; i < tags.length; i++) {\r\n");
      out.write("			  var tag = tags[i];\r\n");
      out.write("			  if ($(tag).position().top < pageBottom) {\r\n");
      out.write("				$(tag).addClass(\"visible\");\r\n");
      out.write("			  } else {\r\n");
      out.write("				$(tag).removeClass(\"visible\");\r\n");
      out.write("			  }\r\n");
      out.write("			}\r\n");
      out.write("		  });\r\n");
      out.write("	</script>\r\n");
      out.write("	\r\n");
      out.write("	<script>\r\n");
      out.write("		$(function () {\r\n");
      out.write("			$(\"#header\").load(\"header.jsp\");\r\n");
      out.write("			$(\"#footer\").load(\"footer.html\");\r\n");
      out.write("		});\r\n");
      out.write("	</script>\r\n");
      out.write("\r\n");
      out.write("	<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    <link rel=\"icon\" href=\"Pics/panda.png\">\r\n");
      out.write("    \r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("        <div class = \"font\">\r\n");
      out.write("            <div id = \"header\"></div>\r\n");
      out.write("            <div class = \"header-adjustment\"></div>\r\n");
      out.write("            <br>\r\n");
      out.write("			<div class = \"container-fluid\">\r\n");
      out.write("			\r\n");
      out.write("                            <div class = \"Cart-Container\">\r\n");
      out.write("                                <div class = \"Header-cart\">\r\n");
      out.write("                                    <h3 class = \"Heading-cart\">Panda Trolly</h3>\r\n");
      out.write("                                    \r\n");
      out.write("                                    <h5 class = \"Remove-Action\" onclick = \"RemovefromCart('all')\">Remove All</h5>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <br>\r\n");
      out.write("                                <p id=\"no-items\"></p>\r\n");
      out.write("								");
      out.print( request.getAttribute("cart_list"));
      out.write("\r\n");
      out.write("								<div class=\"row total-checkout\">\r\n");
      out.write("                                    <div class=\"col\">\r\n");
      out.write("                                        <div class=\"prices\" id=\"tot-amount\"></div>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                    <div class=\"col\">\r\n");
      out.write("                                        <a href=\"#Checkout\">\r\n");
      out.write("                                        <button type=\"sub\" class=\"btn form-submit bamboo\" id=\"checkout\">\r\n");
      out.write("                                            Checkout\r\n");
      out.write("                                            <i class=\"fa-solid fa-angle-right\"></i>\r\n");
      out.write("                                        </button>\r\n");
      out.write("                                        </a>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>  \r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("	<div id=\"footer\"></div>\r\n");
      out.write("    <script>\r\n");
      out.write("    function calcTotal()\r\n");
      out.write("    {\r\n");
      out.write("        var inputs = document.getElementsByClassName(\"quant\");\r\n");
      out.write("        var prices = document.getElementsByClassName(\"price\");\r\n");
      out.write("        var amt = document.getElementsByClassName(\"amount\");\r\n");
      out.write("        var pid = document.getElementsByClassName(\"pid\");\r\n");
      out.write("        var size = document.getElementsByClassName(\"size\");\r\n");
      out.write("\r\n");
      out.write("        var amount = [];\r\n");
      out.write("		var tot = 0;\r\n");
      out.write("		\r\n");
      out.write("        for (var i = 0; i < inputs.length; i++)\r\n");
      out.write("        {\r\n");
      out.write("            var inp = parseInt(inputs[i].value);\r\n");
      out.write("            var pri = parseInt(prices[i].innerHTML.slice(2));\r\n");
      out.write("            amount[i] = inp * pri;\r\n");
      out.write("            console.log(i, inp, pri, amount[i]);\r\n");
      out.write("            amt[i].innerHTML = \"&#8377;&nbsp\" + amount[i];\r\n");
      out.write("            tot += amount[i];\r\n");
      out.write("             \r\n");
      out.write("            // Preferrably shouldn't make this request if previous quantity isn't the same as the new one\r\n");
      out.write("		    var http = new XMLHttpRequest();\r\n");
      out.write("            http.open(\"POST\", \"Cart\", true);\r\n");
      out.write("            http.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded\");\r\n");
      out.write("            var params = \"pid=\" + pid[i].innerHTML + \"&\" + \"size=\" + size[i].innerHTML +\"&\" + \"qty=\" + inputs[i].value + \"&\" + \"job=quantity\"; \r\n");
      out.write("            http.send(params);\r\n");
      out.write("        } \r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("        if(tot == 0)\r\n");
      out.write("        {\r\n");
      out.write("            document.getElementById(\"no-items\").innerHTML = \"Wooh! &nbspThis looks empty.\";\r\n");
      out.write("            document.getElementById(\"checkout\").style.display = \"none\";\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        document.getElementById(\"tot-amount\").innerHTML = \"Total:&nbsp&nbsp &#8377; \" + tot;\r\n");
      out.write("        console.log(tot);\r\n");
      out.write("    }  \r\n");
      out.write("\r\n");
      out.write("    function RemovefromCart(y)\r\n");
      out.write("    {     \r\n");
      out.write("    	\r\n");
      out.write("    	var http = new XMLHttpRequest();\r\n");
      out.write("        http.open(\"POST\", \"Cart\", true);\r\n");
      out.write("        http.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded\");\r\n");
      out.write("\r\n");
      out.write("        if (y === 'all')\r\n");
      out.write("        {\r\n");
      out.write("        	\r\n");
      out.write("            var params = \"qty=all\" + \"&\" + \"job=remove\" ; \r\n");
      out.write("            \r\n");
      out.write("        	console.log(\"All items deleted\");\r\n");
      out.write("            $(\".Cart-Items\").remove();\r\n");
      out.write("            calcTotal();\r\n");
      out.write("        }\r\n");
      out.write("        else\r\n");
      out.write("        {\r\n");
      out.write("        	\r\n");
      out.write("        	var cartItem = y.closest(\".Cart-Items\");\r\n");
      out.write("        	var pid = cartItem.querySelector(\".pid\").textContent;\r\n");
      out.write("        	var size = cartItem.querySelector(\".size\").textContent;\r\n");
      out.write("        	\r\n");
      out.write("            var params = \"pid=\" + pid + \"&\" + \"size=\" + size + \"&\" + \"qty=one\" + \"&\" + \"job=remove\" ; \r\n");
      out.write("            \r\n");
      out.write("            //.parentElement().parentElement() added.\r\n");
      out.write("\r\n");
      out.write("            y.parentElement.parentElement.parentElement.parentElement.parentElement.remove();\r\n");
      out.write("        	console.log(\"Item successfully deleted\");\r\n");
      out.write("            calcTotal();\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        http.send(params);\r\n");
      out.write("\r\n");
      out.write("        http.onreadystatechange = function()\r\n");
      out.write("        {\r\n");
      out.write("            cart_items();\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    window.addEventListener(\"load\", calcTotal);\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>    ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
